theme_bw()
sens_data_marg %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
filter(ordering == "Ordering") %>%
filter(ca > 0.5) %>%
ggplot(aes(x = ca, y = sp_rho, color = wa)) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\rho_s")) +
geom_vline(xintercept = 0.75) +
geom_point(alpha = 0.3) +
theme_bw()
sens_data_marg %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
filter(ordering == "Ordering") %>%
ggplot(aes(x = ca, y = sp_rho, color = wa)) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\rho_s")) +
geom_vline(xintercept = 0.75) +
geom_point(alpha = 0.3) +
theme_bw()
source("C:/Users/flori/OneDrive/Phd/Master thesis/R Implementation/sens_analysis.R", echo=TRUE)
source("C:/Users/flori/OneDrive/Phd/Master thesis/R Implementation/sens_analysis.R", echo=TRUE)
source("surrogacy_functions_new.R")
library(flexsurv)
library(survival)
library(copula)
library(rvinecopulib)
library(kdecopula)
library(dplyr)
clayton_copula = copula::claytonCopula(param = 2, dim = 2)
U = rCopula(copula = clayton_copula, n = 100000)
s0 = qsurvspline0(p = 1 - U[,1], gamma0 = 2, gamma1 = 1.65, knots = knot)
t0 = qsurvspline0(p = 1 - U[,2], gamma0 = 1.5, gamma1 = 2, knots = knot)
mean(t0 < s0)
clayton_copula = copula::claytonCopula(param = 3.715, dim = 2)
U = rCopula(copula = clayton_copula, n = 100000)
s0 = qsurvspline0(p = 1 - U[,1], gamma0 = 2, gamma1 = 1.65, knots = knot)
t0 = qsurvspline0(p = 1 - U[,2], gamma0 = 1.5, gamma1 = 2, knots = knot)
mean(t0 < s0)
clayton_copula = copula::claytonCopula(param = 3.715, dim = 2)
U = rCopula(copula = clayton_copula, n = 100000)
s0 = qsurvspline0(p = 1 - U[,1], gamma0 = 2, gamma1 = 1.65, knots = knot)
t0 = qsurvspline0(p = 1 - U[,2], gamma0 = 1.5, gamma1 = 2, knots = knot)
mean(t0 < s0)
U = rCopula(copula = clayton_copula, n = 100000)
s1 = qsurvspline0(p = 1 - U[,1], gamma0 = 1.5, gamma1 = 1.6, knots = knot)
t1 = qsurvspline0(p = 1 - U[,2], gamma0 = 1, gamma1 = 2, knots = knot)
mean(t1 < s1)
clayton_copula = copula::claytonCopula(param = 3.715, dim = 2)
U = rCopula(copula = clayton_copula, n = 100000)
s0 = qsurvspline0(p = 1 - U[,1], gamma0 = 1.8, gamma1 = 1.65, knots = knot)
t0 = qsurvspline0(p = 1 - U[,2], gamma0 = 1.5, gamma1 = 2, knots = knot)
mean(t0 < s0)
clayton_copula = copula::claytonCopula(param = 3.715, dim = 2)
U = rCopula(copula = clayton_copula, n = 100000)
s0 = qsurvspline0(p = 1 - U[,1], gamma0 = 1.75, gamma1 = 1.65, knots = knot)
t0 = qsurvspline0(p = 1 - U[,2], gamma0 = 1.5, gamma1 = 2, knots = knot)
mean(t0 < s0)
U = rCopula(copula = clayton_copula, n = 100000)
s1 = qsurvspline0(p = 1 - U[,1], gamma0 = 1.25, gamma1 = 1.6, knots = knot)
t1 = qsurvspline0(p = 1 - U[,2], gamma0 = 1, gamma1 = 2, knots = knot)
mean(t1 < s1)
source("surrogacy_functions_new.R")
library(flexsurv)
library(survival)
library(copula)
library(rvinecopulib)
library(kdecopula)
library(dplyr)
set.seed(1)
n_prec = 2000
N = 5000
cop_type = "clayton"
knot = c(1, 5)
restr = FALSE
theta_c12 = 3.715
theta_c34 = 3.715
ctrl_par = c(1.75, 1.65, 1.5, 2, theta_c12)
treat_par = c(1.25, 1.6, 1, 2, theta_c34)
temp_f = surrogacy_measures_sens(cop_type = cop_type, fit_0_par = ctrl_par, fit_1_par = treat_par,
n_sim = 1000, n_prec = n_prec,
knots0 = knot, knots1 = knot, knott0 = knot, knott1 = knot,
minfo_prec = 0, restr = TRUE, get_unid = TRUE, cop_type2 = "clayton",
option = option, ncores = 8, get_marg_tau = TRUE)
temp_f = surrogacy_measures_sens(cop_type = cop_type, fit_0_par = ctrl_par, fit_1_par = treat_par,
n_sim = 1000, n_prec = n_prec,
knots0 = knot, knots1 = knot, knott0 = knot, knott1 = knot,
minfo_prec = 0, restr = TRUE, get_unid = TRUE, cop_type2 = "clayton",
option = 2, ncores = 8, get_marg_tau = TRUE)
temp_f %>% filter(pmin(abs(tau_s0t0), abs(tau_s1t1)) > pmax(abs(tau_s0t1), abs(tau_s1t0)),
tau_s0s1 > 0, tau_s0t0 > 0, tau_s0t1 > 0,
tau_s1t0 > 0, tau_s1t1 > 0, tau_t0t1 > 0)
set.seed(1)
library(tidyverse)
library(latex2exp)
load(file = "ovarian_sens_results.RData")
model_comparison %>%
mutate_if(.predicate = is.numeric, .funs = ~round(x = .x, digits = 2))
#make artificial data set to plot the four plots in a square grid
sens_data_marg_helper = sens_data_marg %>%
group_by(ordering) %>%
slice_sample(n = 1000) %>%
mutate(assumptions = "No Assumptions") %>%
ungroup()
sens_data_marg_helper = sens_data_marg_helper %>%
bind_rows(
sens_data_marg %>% filter(tau_s0s1 > 0, tau_s0t0 > 0, tau_s0t1 > 0,
tau_s1t0 > 0, tau_s1t1 > 0, tau_t0t1 > 0) %>%
group_by(ordering) %>%
slice_sample(n = 1000) %>%
mutate(assumptions = "Monotonicity") %>%
ungroup()
)
sens_data_marg_helper = sens_data_marg_helper %>%
bind_rows(
sens_data_marg %>% filter(pmin(abs(tau_s0t0), abs(tau_s1t1)) > pmax(abs(tau_s0t1), abs(tau_s1t0))) %>%
group_by(ordering) %>%
slice_sample(n = 1000) %>%
mutate(assumptions = "Weaker CA") %>%
ungroup()
)
sens_data_marg_helper = sens_data_marg_helper %>%
bind_rows(
sens_data_marg %>% filter(pmin(abs(tau_s0t0), abs(tau_s1t1)) > pmax(abs(tau_s0t1), abs(tau_s1t0)),
tau_s0s1 > 0, tau_s0t0 > 0, tau_s0t1 > 0,
tau_s1t0 > 0, tau_s1t1 > 0, tau_t0t1 > 0) %>%
group_by(ordering) %>%
slice_sample(n = 1000) %>%
ungroup() %>%
mutate(assumptions = "Monotonicity + Weaker CA")
)
sens_data_marg_helper %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
ggplot(aes(x = ca, y = sp_rho)) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\rho_s")) +
geom_point(alpha = 0.3, size = 1) +
theme_bw() +
facet_wrap(facets = "assumptions")
sens_data_marg_helper %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
ggplot(aes(x = ca, y = 1 - exp(-2*minfo))) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\rho_s")) +
geom_point(alpha = 0.3, size = 1) +
theme_bw() +
facet_wrap(facets = "assumptions")
View(sens_data_marg)
sens_data_marg_helper %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
ggplot(aes(x = ca, y = 1 - exp(-2*minfo))) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\R_H^2")) +
geom_point(alpha = 0.3, size = 1) +
theme_bw() +
facet_wrap(facets = "assumptions")
sens_data_marg_helper %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
ggplot(aes(x = wa, y = 1 - exp(-2*minfo))) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_0} + \\tau_{S_1T_1}}{2}$")) +
scale_y_continuous(name = TeX("$\\rho_s")) +
geom_point(alpha = 0.3, size = 1) +
theme_bw() +
facet_wrap(facets = "assumptions")
sens_data_marg_helper %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
ggplot(aes(x = wa, y = 1 - exp(-2*minfo))) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_0} + \\tau_{S_1T_1}}{2}$")) +
scale_y_continuous(name = TeX("$\\R_H^2")) +
geom_point(alpha = 0.3, size = 1) +
theme_bw() +
facet_wrap(facets = "assumptions")
sens_data_marg %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
filter(ordering == "Ordering") %>%
ggplot(aes(x = ca, y = sp_rho, color = wa)) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\rho_s")) +
geom_vline(xintercept = 0.75) +
geom_point(alpha = 0.3) +
theme_bw()
sens_data_marg %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
filter(ordering == "Ordering") %>%
ggplot(aes(x = ca, y = sp_rho)) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\rho_s")) +
geom_vline(xintercept = 0.75) +
geom_point(alpha = 0.3) +
theme_bw()
sens_data_marg %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
mutate(WCA = ifelse(pmin(abs(tau_s0t0), abs(tau_s1t1)) > pmax(abs(tau_s0t1), abs(tau_s1t0)),
"Yes", "No")) %>%
filter(ordering == "Ordering") %>%
ggplot(aes(x = ca, y = sp_rho, color = WCA)) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\rho_s")) +
geom_vline(xintercept = 0.75) +
geom_point(alpha = 0.3) +
theme_bw()
sens_data_marg %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
mutate(WCA = ifelse(pmin(abs(tau_s0t0), abs(tau_s1t1)) > pmax(abs(tau_s0t1), abs(tau_s1t0)),
"Yes", "No")) %>%
filter(ordering == "Ordering") %>%
ggplot(aes(x = ca, y = sp_rho, color = WCA)) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\rho_s")) +
geom_vline(xintercept = 0.75) +
geom_point(alpha = 0.3) +
theme_bw(legend.position = c(0.1, 0.1))
sens_data_marg %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
mutate(WCA = ifelse(pmin(abs(tau_s0t0), abs(tau_s1t1)) > pmax(abs(tau_s0t1), abs(tau_s1t0)),
"Yes", "No")) %>%
filter(ordering == "Ordering") %>%
ggplot(aes(x = ca, y = sp_rho, color = WCA)) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\rho_s")) +
geom_vline(xintercept = 0.75) +
geom_point(alpha = 0.3) +
theme_bw() +
theme(legend.position = c(0.1, 0.1))
sens_data_marg %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
mutate(WCA = ifelse(pmin(abs(tau_s0t0), abs(tau_s1t1)) > pmax(abs(tau_s0t1), abs(tau_s1t0)),
"Yes", "No")) %>%
filter(ordering == "Ordering") %>%
ggplot(aes(x = ca, y = sp_rho, color = WCA)) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\rho_s")) +
geom_vline(xintercept = 0.75) +
geom_point(alpha = 0.3) +
theme_bw() +
theme(legend.position = c(0.2, 0.2))
sens_data_marg %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
mutate(WCA = ifelse(pmin(abs(tau_s0t0), abs(tau_s1t1)) > pmax(abs(tau_s0t1), abs(tau_s1t0)),
"Yes", "No")) %>%
filter(ordering == "Ordering") %>%
ggplot(aes(x = ca, y = sp_rho, color = WCA)) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\rho_s")) +
geom_vline(xintercept = 0.75) +
geom_point(alpha = 0.3) +
theme_bw() +
theme(legend.position = c(0.2, 0.2), legend.margin = "black")
sens_data_marg %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
mutate(WCA = ifelse(pmin(abs(tau_s0t0), abs(tau_s1t1)) > pmax(abs(tau_s0t1), abs(tau_s1t0)),
"Yes", "No")) %>%
filter(ordering == "Ordering") %>%
ggplot(aes(x = ca, y = sp_rho, color = WCA)) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\rho_s")) +
geom_vline(xintercept = 0.75) +
geom_point(alpha = 0.3) +
theme_bw() +
theme(legend.position = c(0.2, 0.2), legend.background = element_blank())
sens_data_marg %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
mutate(WCA = ifelse(pmin(abs(tau_s0t0), abs(tau_s1t1)) > pmax(abs(tau_s0t1), abs(tau_s1t0)),
"Yes", "No")) %>%
filter(ordering == "Ordering") %>%
ggplot(aes(x = ca, y = sp_rho, color = WCA)) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\R_H^2")) +
geom_vline(xintercept = 0.75) +
geom_point(alpha = 0.3) +
theme_bw() +
theme(legend.position = c(0.2, 0.2), legend.background = element_blank())
sens_data_marg %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
filter(ordering == "No Ordering") %>%
ggplot(aes(x = ca, y = sp_rho)) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\rho_s")) +
geom_vline(xintercept = 0.80) +
geom_point(alpha = 0.3) +
theme_bw()
source('C:/Users/Florian/OneDrive/Phd/Master thesis/R Implementation/sens_analysis_ovarian_processing.R', echo=TRUE)
set.seed(1)
library(tidyverse)
library(latex2exp)
load(file = "ovarian_sens_results.RData")
model_comparison %>%
mutate_if(.predicate = is.numeric, .funs = ~round(x = .x, digits = 2))
#make artificial data set to plot the four plots in a square grid
sens_data_marg_helper = sens_data_marg %>%
group_by(ordering) %>%
slice_sample(n = 1000) %>%
mutate(assumptions = "No Assumptions") %>%
ungroup()
sens_data_marg_helper = sens_data_marg_helper %>%
bind_rows(
sens_data_marg %>% filter(tau_s0s1 > 0, tau_s0t0 > 0, tau_s0t1 > 0,
tau_s1t0 > 0, tau_s1t1 > 0, tau_t0t1 > 0) %>%
group_by(ordering) %>%
slice_sample(n = 1000) %>%
mutate(assumptions = "Monotonicity") %>%
ungroup()
)
sens_data_marg_helper = sens_data_marg_helper %>%
bind_rows(
sens_data_marg %>% filter(pmin(abs(tau_s0t0), abs(tau_s1t1)) > pmax(abs(tau_s0t1), abs(tau_s1t0))) %>%
group_by(ordering) %>%
slice_sample(n = 1000) %>%
mutate(assumptions = "Weaker CA") %>%
ungroup()
)
sens_data_marg_helper = sens_data_marg_helper %>%
bind_rows(
sens_data_marg %>% filter(pmin(abs(tau_s0t0), abs(tau_s1t1)) > pmax(abs(tau_s0t1), abs(tau_s1t0)),
tau_s0s1 > 0, tau_s0t0 > 0, tau_s0t1 > 0,
tau_s1t0 > 0, tau_s1t1 > 0, tau_t0t1 > 0) %>%
group_by(ordering) %>%
slice_sample(n = 1000) %>%
ungroup() %>%
mutate(assumptions = "Monotonicity + Weaker CA")
)
#R_H
png(filename = "Figures/ovarian_results_sens_ord.png", width = 650, height = 520)
sens_data_marg_helper %>%
filter(ordering == "Ordering") %>%
ggplot(aes(x = 1 - exp(-2*minfo))) +
scale_x_continuous(limits = c(0.5, 1), name = TeX("$R_H^2$")) +
geom_histogram(fill = "gray", color = "black") +
theme_bw() +
facet_wrap(facets = ~assumptions)
dev.off()
png(filename = "Figures/ovarian_results_sens_no_ord.png", width = 650, height = 520)
sens_data_marg_helper %>%
filter(ordering == "No Ordering") %>%
ggplot(aes(x = 1 - exp(-2*minfo))) +
scale_x_continuous(limits = c(0.5, 1), name = TeX("$R_H^2$")) +
geom_histogram(fill = "gray", color = "black") +
theme_bw() +
facet_wrap(facets = ~assumptions)
dev.off()
#Spearman's rho
png(filename = "Figures/ovarian_results_sens_ord.png", width = 650, height = 520)
sens_data_marg_helper %>%
filter(ordering == "Ordering") %>%
ggplot(aes(x = 1 - exp(-2*minfo))) +
scale_x_continuous(limits = c(0.5, 1), name = TeX("$R_H^2$")) +
geom_histogram(fill = "gray", color = "black") +
theme_bw() +
facet_wrap(facets = ~assumptions)
dev.off()
png(filename = "Figures/ovarian_results_sens_no_ord.png", width = 650, height = 520)
sens_data_marg_helper %>%
filter(ordering == "No Ordering") %>%
ggplot(aes(x = 1 - exp(-2*minfo))) +
scale_x_continuous(limits = c(0.5, 1), name = TeX("$R_H^2$")) +
geom_histogram(fill = "gray", color = "black") +
theme_bw() +
facet_wrap(facets = ~assumptions)
dev.off()
sens_data_marg_helper %>%
mutate_if(.predicate = is.numeric, .funs = ~round(x = .x, digits = 3)) %>%
group_by(assumptions, ordering) %>%
summarise(Range = paste0("[", round(min(1 - exp(-2*minfo)), 3), ", ",
round(max(1 - exp(-2*minfo)), 3), "]"),
SD = sd(1 - exp(-2*minfo)),
perc = paste0("[", round(quantile(1 - exp(-2*minfo), 0.01), 3), ", ",
round(quantile(1 - exp(-2*minfo), 0.99), 3), "]"),
median = median(1 - exp(-2*minfo))
) %>%
mutate_if(.predicate = is.numeric, .funs = ~round(x = .x, digits = 3)) %>%
arrange(ordering, assumptions) %>%
knitr::kable(format = "latex")
sens_data_marg_helper %>%
mutate_if(.predicate = is.numeric, .funs = ~round(x = .x, digits = 3)) %>%
group_by(assumptions, ordering) %>%
summarise(Range = paste0("[", round(min(sp_rho), 3), ", ",
round(max(sp_rho), 3), "]"),
SD = sd(sp_rho),
perc = paste0("[", round(quantile(sp_rho, 0.01), 3), ", ",
round(quantile(sp_rho, 0.99), 3), "]"),
median = median(sp_rho)
) %>%
mutate_if(.predicate = is.numeric, .funs = ~round(x = .x, digits = 3)) %>%
arrange(ordering, assumptions) %>%
knitr::kable(format = "latex")
sens_data_marg_helper %>%
mutate_if(.predicate = is.numeric, .funs = ~round(x = .x, digits = 3)) %>%
group_by(assumptions, ordering) %>%
summarise(Range = paste0("[", round(min(kendall), 3), ", ",
round(max(kendall), 3), "]"),
SD = sd(kendall),
perc = paste0("[", round(quantile(kendall, 0.01), 3), ", ",
round(quantile(kendall, 0.99), 3), "]"),
median = median(kendall)
) %>%
mutate_if(.predicate = is.numeric, .funs = ~round(x = .x, digits = 3)) %>%
arrange(ordering, assumptions) %>%
knitr::kable(format = "latex")
# sens_data_marg_helper %>%
#   pivot_longer(names_to = "extra", values_to = "value", cols = 4:9) %>%
#   filter(!(extra %in% c("tau_s0t0", "tau_s1t1"))) %>%
#   filter(assumptions == "Monotonicity + Weaker CA") %>%
#   ggplot(aes(x = value, y = sp_rho)) +
#   geom_point() +
#   facet_grid(ordering~extra)
# sens_data_marg_helper %>%
#   pivot_longer(names_to = "extra", values_to = "value", cols = 4:9) %>%
#   filter(!(extra %in% c("tau_s0t0", "tau_s1t1"))) %>%
#   ggplot(aes(x = value, y = sp_rho, color = assumptions)) +
#   geom_point(alpha = 0.1, size = 0.5) +
#   facet_grid(ordering~extra)
#this plot may be less useful
#I think these plots could be used to illustrate another way to look
#at additional assumptions. Instead of prespecifying all the assumptions
#we could also just look at the relation between ICA on the one hand,
#and the unidentifiable parameters on the other hand
# sens_data_marg_helper %>%
#   mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
#   ggplot(aes(x = ca, y = 1 - exp(-2*minfo))) +
#   scale_x_continuous(limits = c(-1, 1),
#                      name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
#   scale_y_continuous(name = TeX("$\\R_H^2")) +
#   geom_point(alpha = 0.3, size = 1) +
#   theme_bw() +
#   facet_wrap(facets = "assumptions")
#
# sens_data_marg_helper %>%
#   mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
#   ggplot(aes(x = wa, y = 1 - exp(-2*minfo))) +
#   scale_x_continuous(limits = c(-1, 1),
#                      name = TeX("$\\frac{\\tau_{S_0T_0} + \\tau_{S_1T_1}}{2}$")) +
#   scale_y_continuous(name = TeX("$\\R_H^2")) +
#   geom_point(alpha = 0.3, size = 1) +
#   theme_bw() +
#   facet_wrap(facets = "assumptions")
sens_data_marg %>%
mutate(ca = 0.5*(tau_s0t1 + tau_s1t0), wa = 0.5*(tau_s0s1 + tau_t0t1)) %>%
mutate(WCA = ifelse(pmin(abs(tau_s0t0), abs(tau_s1t1)) > pmax(abs(tau_s0t1), abs(tau_s1t0)),
"Yes", "No")) %>%
filter(ordering == "Ordering") %>%
ggplot(aes(x = ca, y = 1 - exp(-2*minfo), color = WCA)) +
scale_x_continuous(limits = c(-1, 1),
name = TeX("$\\frac{\\tau_{S_0T_1} + \\tau_{S_1T_0}}{2}$")) +
scale_y_continuous(name = TeX("$\\R_H^2")) +
geom_vline(xintercept = 0.75) +
geom_point(alpha = 0.3) +
theme_bw() +
theme(legend.position = c(0.2, 0.2), legend.background = element_blank())
source('C:/Users/Florian/OneDrive/Phd/Master thesis/R Implementation/sens_analysis_ovarian_processing.R', echo=TRUE)
View(sens_data_marg)
View(sens_data_marg_helper)
rm(list = ls())
set.seed(1)
library(tidyverse)
library(latex2exp)
load(file = "ovarian_sens_results.RData")
model_comparison %>%
mutate_if(.predicate = is.numeric, .funs = ~round(x = .x, digits = 2))
#make artificial data set to plot the four plots in a square grid
sens_data_marg_helper = sens_data_marg %>%
group_by(ordering) %>%
slice_sample(n = 1000) %>%
mutate(assumptions = "No Assumptions") %>%
ungroup()
sens_data_marg_helper = sens_data_marg_helper %>%
bind_rows(
sens_data_marg %>% filter(tau_s0s1 > 0, tau_s0t0 > 0, tau_s0t1 > 0,
tau_s1t0 > 0, tau_s1t1 > 0, tau_t0t1 > 0) %>%
group_by(ordering) %>%
slice_sample(n = 1000) %>%
mutate(assumptions = "Monotonicity") %>%
ungroup()
)
sens_data_marg_helper = sens_data_marg_helper %>%
bind_rows(
sens_data_marg %>% filter(pmin(abs(tau_s0t0), abs(tau_s1t1)) > pmax(abs(tau_s0t1), abs(tau_s1t0))) %>%
group_by(ordering) %>%
slice_sample(n = 1000) %>%
mutate(assumptions = "Weaker CA") %>%
ungroup()
)
sens_data_marg_helper = sens_data_marg_helper %>%
bind_rows(
sens_data_marg %>% filter(pmin(abs(tau_s0t0), abs(tau_s1t1)) > pmax(abs(tau_s0t1), abs(tau_s1t0)),
tau_s0s1 > 0, tau_s0t0 > 0, tau_s0t1 > 0,
tau_s1t0 > 0, tau_s1t1 > 0, tau_t0t1 > 0) %>%
group_by(ordering) %>%
slice_sample(n = 1000) %>%
ungroup() %>%
mutate(assumptions = "Monotonicity + Weaker CA")
)
View(sens_data_marg_helper)
View(sens_data_marg)
load("simulations_results_data.RData")
View(data_sens_all)
